<UserControl x:Class="ModernChrome.ModernWindowChrome"
             x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ModernChrome"
             xmlns:converters="clr-namespace:ModernChrome.Converters"
             mc:Ignorable="d"
             d:DesignHeight="80" d:DesignWidth="300"
             d:DataContext="{d:DesignInstance local:DesignTimeModernWindow, IsDesignTimeCreatable=True}"
             UseLayoutRounding="True"
             x:Name="WindowChrome">
    <UserControl.Resources>
        <!-- The merged dictionaries do not get loaded during runtime - it is purely for testing in the designer. -->
        <local:DesignTimeResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/LightBlue.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="{DynamicResource ControlTextBrushKey}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border" TextBlock.Foreground="{TemplateBinding Foreground}"
                                    BorderThickness="1,0,1,1" BorderBrush="Transparent"
                                    Background="Transparent">
                                <ContentPresenter Margin="0" HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" RecognizesAccessKey="False" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background"
                                            Value="{DynamicResource WindowCommandHighlightBrushKey}" />
                                    <Setter TargetName="Border" Property="BorderBrush"
                                            Value="{DynamicResource WindowCommandHighlightBorderBrushKey}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background"
                                            Value="{DynamicResource WindowCommandActiveBrushKey}" />
                                    <Setter TargetName="Border" Property="BorderBrush"
                                            Value="{DynamicResource WindowCommandActiveBorderBrushKey}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground"
                                Value="{DynamicResource WindowCommandHighlightTextBrushKey}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground"
                                Value="{DynamicResource WindowCommandActiveTextBrushKey}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <local:BindingProxy x:Key="ActiveBorderBrushProxyKey" Data="{DynamicResource ActiveBorderBrushKey}" />
            <local:BindingProxy x:Key="StatusBarBlueBrushProxyKey"
                                Data="{DynamicResource StatusBarBlueBrushKey}" />
            <local:BindingProxy x:Key="WindowBrushProxyKey" Data="{DynamicResource WindowBrushKey}" />
        </local:DesignTimeResourceDictionary>
    </UserControl.Resources>

    <!-- ROOT CONTAINER -->
    <Border
        BorderThickness="{Binding Path=WindowState, Converter={x:Static converters:WindowStateToThicknessConverter.Instance}}">
        <Border.Background>
            <MultiBinding Converter="{x:Static converters:FirstNotNullMultiConverter.Instance}">
                <Binding Path="Background" />
                <Binding Source="{StaticResource WindowBrushProxyKey}" Path="Data" />
            </MultiBinding>
        </Border.Background>
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <MultiBinding Converter="{x:Static converters:FirstNotNullMultiConverter.Instance}">
                            <Binding Path="BorderBrush" />
                            <Binding Source="{StaticResource ActiveBorderBrushProxyKey}" Path="Data" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ModernWindow}}, Path=IsActive}"
                        Value="False">
                        <Setter Property="BorderBrush" Value="{DynamicResource InactiveBorderBrushKey}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="35" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- TITLE BAR -->
            <Grid x:Name="WindowCaptionBar" Grid.Row="0" Background="{DynamicResource WindowFrameBrushKey}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!-- ICON AND TITLE -->
                <Grid Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="12" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Canvas Grid.Column="1"
                            Width="20" Height="20" Margin="0,0,12,0"
                            Visibility="{Binding Path=ShowCaptionIcon, Converter={x:Static converters:BooleanToVisibilityConverter.Instance}}">
                        <Canvas.Style>
                            <Style TargetType="Canvas">
                                <Setter Property="TextBlock.Foreground"
                                        Value="{DynamicResource ActiveCaptionIconBrushKey}" />
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ModernWindow}}, Path=IsActive}"
                                        Value="False">
                                        <Setter Property="TextBlock.Foreground"
                                                Value="{DynamicResource InactiveCaptionIconBrushKey}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Canvas.Style>
                        <ContentPresenter
                            TextBlock.Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type Canvas}}, Path=(TextBlock.Foreground)}"
                            Content="{Binding Path=CaptionIcon}" />
                    </Canvas>
                    <Grid Grid.Column="2">
                        <TextBlock TextTrimming="CharacterEllipsis" Padding="0" VerticalAlignment="Center"
                                   Margin="0,0,0,1"
                                   Text="{Binding Path=Title}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="{DynamicResource ActiveCaptionTextBrushKey}" />
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ModernWindow}}, Path=IsActive}"
                                            Value="False">
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource InactiveCaptionTextBrushKey}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <Grid x:Name="WindowTitleBar" Grid.Column="2" Background="Transparent" />
                </Grid>

                <!-- WINDOW COMMAND BUTTONS -->
                <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Top">
                    <Button Style="{StaticResource WindowButtonStyle}" x:Name="MinimizeButton" Width="34" Height="26"
                            ToolTip="{Binding Path=Minimize, ElementName=WindowChrome}"
                            IsEnabled="{Binding Path=ResizeMode, Converter={x:Static converters:ResizeModeToEnabledConverter.Instance}, ConverterParameter='MIN'}">
                        <Path SnapsToDevicePixels="True" Data="F1M0,6L0,9 9,9 9,6 0,6z"
                              Fill="{Binding Foreground, ElementName=MinimizeButton}" />
                    </Button>
                    <Button x:Name="RestoreButton" Width="34" Height="26"
                            IsEnabled="{Binding Path=ResizeMode, Converter={x:Static converters:ResizeModeToEnabledConverter.Instance}, ConverterParameter='MAX'}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}">
                                <Setter Property="ToolTip" Value="{Binding Path=Maximize, ElementName=WindowChrome}" />
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ModernWindow}}, Path=WindowState}"
                                        Value="Maximized">
                                        <Setter Property="ToolTip"
                                                Value="{Binding Path=RestoreDown, ElementName=WindowChrome}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Path SnapsToDevicePixels="True"
                              Fill="{Binding Foreground, ElementName=RestoreButton}">
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Setter Property="Data" Value="F1M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3z" />
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ModernWindow}}, Path=WindowState}"
                                            Value="Maximized">
                                            <Setter Property="Data"
                                                    Value="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Button>
                    <Button Style="{StaticResource WindowButtonStyle}" x:Name="CloseButton" Width="34" Height="26"
                            ToolTip="{Binding Path=Close, ElementName=WindowChrome}"
                            IsEnabled="{Binding Path=ShowCloseButton}">
                        <Path SnapsToDevicePixels="True"
                              Data="M 10.009,1.704 L 8.331,0.026 5.03,3.327 1.703,0 0,1.704 3.326,5.031 0.025,8.332 1.703,10.009 5.004,6.708 8.305,10.009 10.009,8.305 6.708,5.005"
                              Fill="{Binding Foreground, ElementName=CloseButton}" />
                    </Button>
                </StackPanel>
            </Grid>

            <!-- WINDOW CONTENT -->
            <ContentPresenter Grid.Row="1" Content="{Binding Path=Content}" />

            <!-- STATUS BAR -->
            <Grid Grid.Row="2" Height="23"
                  Visibility="{Binding Path=ShowStatusBar, Converter={x:Static converters:BooleanToVisibilityConverter.Instance}}">
                <Grid.Background>
                    <MultiBinding Converter="{x:Static converters:FirstNotNullMultiConverter.Instance}">
                        <Binding Path="BorderBrush" />
                        <Binding Source="{StaticResource StatusBarBlueBrushProxyKey}" Path="Data" />
                    </MultiBinding>
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="1" Content="{Binding Path=StatusBar}"
                                  TextBlock.Foreground="{DynamicResource StatusBarTextBrushKey}" />
                <Grid Grid.Column="3"
                      Visibility="{Binding Path=WindowState, Converter={x:Static converters:WindowStateToVisibilityConverter.Instance}}">
                    <Path Fill="#66000000" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                          Margin="2" SnapsToDevicePixels="True"
                          Data="M6,0 L7,0 7,1 6,1 z M6,2 L6,3 7,3 7,2 z M6,4 L6,5 7,5 7,4 z M6,6 L6,7 7,7 7,6 z M0,6 L0,7 1,7 1,6 z M2,6 L2,7 3,7 3,6 z M4,6 L4,7 5,7 5,6 z M4,2 L4,3 5,3, 5,2 z M4,4 L4,5 5,5, 5,4 z M2,4 L2,5 3,5, 3,4 z" />
                    <Path Fill="#ccffffff" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                          Margin="3" Opacity="0.75"
                          Data="M6,0 L7,0 7,1 6,1 z M6,2 L6,3 7,3 7,2 z M6,4 L6,5 7,5 7,4 z M6,6 L6,7 7,7 7,6 z M0,6 L0,7 1,7 1,6 z M2,6 L2,7 3,7 3,6 z M4,6 L4,7 5,7 5,6 z M4,2 L4,3 5,3, 5,2 z M4,4 L4,5 5,5, 5,4 z M2,4 L2,5 3,5, 3,4 z" />
                </Grid>
            </Grid>
        </Grid>
    </Border>
</UserControl>